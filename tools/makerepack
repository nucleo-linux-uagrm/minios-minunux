#!/bin/bash

# Author: Marcos Tischer Vallim. <https://github.com/mvallim>
# Author: crims0n. <https://minios.dev>

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
BUILD_DIR="$SCRIPT_DIR/../build"
ISO_DIR="$BUILD_DIR/../iso"
KERNEL_DIR="$BUILD_DIR/../kernel"

. $SCRIPT_DIR/../linux-live/minioslib || exit 1
. $SCRIPT_DIR/../linux-live/config || exit 1
set +u
if [ -z $BATCH ]; then
    . $SCRIPT_DIR/../linux-live/buildconfig || exit 1
fi
set -u
. $SCRIPT_DIR/../linux-live/kernelconfig || exit 1

# change this for unattended installation
UNATTENDED="true"

CMD=(repack_modules build_iso)

# =============   main  ================

INSTALL_DIR=""

common_variables $SCRIPT_DIR/../linux-live/layoutcodes.csv

console_colors

allow_root_only

if [ -f /.dockerenv ] || [ "$container" = "podman" ]; then
    new_run
fi

create_livekitname_install_symlink

create_completion

# check number of args
if [[ $# == 0 || $# > 3 ]]; then help; fi

# loop through args
dash_flag=false
start_index=0
end_index=${#CMD[*]}
for ii in "$@"; do
    if [[ $ii == "-" ]]; then
        dash_flag=true
        continue
    fi
    find_index $ii
    if [[ $dash_flag == false ]]; then
        start_index=$index
    else
        end_index=$(($index + 1))
    fi
done
if [[ $dash_flag == false ]]; then
    end_index=$(($start_index + 1))
fi

#loop through the commands
for ((ii = $start_index; ii < $end_index; ii++)); do
    setup_install_dir
    ${CMD[ii]}
done

echo -e "${BOLD}${LIGHTYELLOW}$0${ENDCOLOR} - ${LIGHTGREEN}Command completed successfully!${ENDCOLOR}"
