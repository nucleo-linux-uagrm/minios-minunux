************************************************************************************************** 
UIRD - Unified Init Ram Disk system

Унифицированная система инициализации для модульных Linux систем. В основе реализации лежит набор 
скриптов инициализации dracut (модули base, kernel-modules), сценарий инициализации uird-init и библиотека 
функций к нему livekitlib.

Под унификацией мы понимаем:
    - возможность загрузки одним и тем же набором uird + ядро различных лайв дистрибутивов Linux с 
      возможностью сохранения системных изменений;
    - прозрачная работа с различными источниками; не только hdd и cd/dvd, но и сетевыми http, ftp, 
      cifs, rsync etc; более того, источники различного типа могут быть использованы одновременно.
      максимально унифицирована работа с различными хранилищами данных; модули squashfs (модуль.xzm), 
      файлы-образы (файл.iso, файл.img), и просто каталоги подключаются одинаково. Их можно монтировать 
      с использованием aufs (RO,RW), а также копировать данные в корень системы с сохранением структуры 
      каталогов.

Более подробное описание процесса загрузки с использованием uird можно прочитать на сайте проекта: 
https://github.com/neobht/uird/

Параметры загрузки UIRD

    - uird.par=value           - присвоить новое значение, которое заменит значение по умолчанию;
    - uird.par=value1,value2   - список значений  
    - uird.par+=value          - добавить значение к списку дефолтных значений
    - uird.par=value::SUBVALUE1=yes::SUBVALUE2=no - дополнительные параметры для "value"

    - uird.basecfg= - расположение базового конфигурационного файла basecfg.ini
    - uird.config= - расположение конфигурационного файла системы MagOS.ini
    - uird.ro[+]= - фильтр для модулей/директорий, которые монтируются в режиме RO
    - uird.rw[+]= - фильтр для модулей/директорий, которые монтируются в режиме RW
    - uird.cp[+]= - фильтр для модулей/директорий, содержимое которых копируется в корень
    - uird.copy2ram[+]= - фильтр для модулей/директорий, которые копируются в RAM
    - uird.copy2cache[+]= - фильтр для модулей/директорий, которые копируются в КЭШ
    - uird.rootfs= - тип rootfs (tmpfs, zram) и ее параметры (размер, алгоритм сжатия)
    - uird.union= - тип слоеной фс (aufs, overlay)
    - uird.ip= - IP:GW:MASK , если не указан, то используется DHCP
    - uird.netfsopt[+]= - дополнительные опции монтирования сетевых ФС: sshfs,nfs,curlftpfs,cifs
    - uird.load[+]= - фильтр для модулей/директорий, которые необходимо подключить на этапе загрузки
    - uird.noload[+]= - фильтр для модулей/директорий, которые необходимо пропустить во время загрузки
    - uird.from[+]= - источники, где лежат модули/директории для системы
    - uird.cache[+]= - источники, в которые стоит синхронизировать модули/директории
    - uird.homes[+]= - источники, где хранятся домашние директории пользователей (объединяются AUFS)
    - uird.home= - источник, где хранятся домашние директории пользователей
    - uird.changes= - источник, где хранить персистентные изменения
    - uird.mode= - режим работы с сохранениями
    - uird.mounts[+]= - источники, которые необходимо примонтировать
    - uird.find_params[+]= - параметры для утилиты find при поиске модулей (например: -maxdepth,2)
    - uird.break=STAGE - остановить загрузку на определённой стадии и перейти в режим отладки
    - uird.swap - подключение разделов и файлов swap
    - uird.scan - поиск модулей и прочего с возможностью автозагрузки
    - uird.syscp[+]= - копирование файлов из UIRD в систему
    - uird.aria2= - предзагрузка источника в RAM утилитой aria2c (torrent,https и прочее недоступное 
      для монтироавния uird.from, uird.mounts)
    - uird.force - продолжить загрузку, игнорируя ненайденные источники
    - uird.freemedia - освободить (размонтировать) носители с источниками, работает только совместно с uird.copy2ram
    - uird.shutdown - создать каталог /run/initramfs, который использует системд при выключении системы, передавая туда управление
    - uird.preinit - включить обработку ini файла, заданного в uird.config
    - quickshell, qs - консоль на начальном этапе работы uird-init
    - qse - консоль в конце работы uird-init
    - debug - подробный вывод и приостановка uird-init на нескольких этапах работы
    
    Однобуквенные параметры:
    Сделаны для сокращения записи, работают только из cmdline (т.е. не из конфига uird)
    Имеют приоритет над аналогичным "длинным" параметром, даже если он тоже в cmdline.
    Записываются в одно слово начиная с символа "-". Например -Qsfo.
    -q = qs
    -Q = qse
    -f = uird.force
    -S = uird.shutdown
    -p = uird.preinit
    -z = uird.rootfs=zram
    -s = uird.swap=auto
    -c = uird.mode=clean
    -o = uird.union=overlay
    -F = uird.freemedia

Параметры по-умолчанию и справочная система:

UIRD имеет встроенную справочную систему. Для получения подсказки по параметрам и значению, которое 
имеет параметр по умолчанию нужно просто передать параметру «help». Например:

    uird.from=help - получить справку по параметру uird.from и узнать его дефолтное значение
    uird.help      - эта справка


Уровни для источников
Вводится уровень точек монтирования layer-mounts и соответствующий параметр uird.mounts=:
     uird.mounts=/MagOS/www::/var/www;http://magos.sibsau.ru/repository/netlive/2016.64/MagOS::/mnt/http
     (параметр необязательный)

Вводится уровень кеша layer-cache и соответствующий параметр uird.cache=. Служит для синхронизации удаленных 
репозиториев в локальные или частные (INTRANET) репозитории, а также для обновления системы.
     uird.cache=/MagOS/cache;/MagOS-Data/cache;/MagOS-Data/netlive
     (параметр не обязательный)

Вводится базовый уровень layer-base и соответствующий параметр uird.from=:
    uird.from=/MagOS;/MagOS-Data;MagOS.iso;http://magos.sibsau.ru/repository/netlive/2016.64/MagOS

Вводится уровень домашних директорий пользователя layer-homes и соответствующие параметры: uird.homes=
    uird.homes=/MagOS-Data/home

Все директории пользователя из различных источников каскадно объединяются посредством AUFS и монтируются в /home. 
Более приоритетным является самый первый источник, затем в порядке перечисления уменьшается приоритет.
В случае, если источник задан параметром uird.home=, то происходит монтирование источника в /home.


Загрузка реальной системы на примере MagOS Linux (www.magos-linux.ru):

MagOS - изначально модульная система. Корневая ФС MagOS образуется многослойным подключением модулей 
squashfs с использованием aufs. Модули, которые необходимо подключить при загрузке, располагаются 
в каталогах:

    /MagOS/base/
    /MagOS/modules/
    /MagOS-Data/modules/

Помимо подключения необходимо копировать в корневую ФС содержимое каталогов:

    /MagOS/rootcopy/
    /MagOS-Data/rootcopy/

Каталоги (источники) MagOS и MagOS-Data могут располагаться на разных дисках.

Чтобы загрузить MagOS c UIRD нужны следующие параметры:

    - uird.from=/MagOS;/MagOS-Data - найти два источника MagOS и MagOS-Data на всех доступных носителях;

    - uird.load=/base/,/modules/,rootcopy - подключать модули и каталоги, если в путях к ним содержится 
      сочетание символов: «/base/», «/modules/» или «rootcopy» (описанию соответствуют: /MagOS/base/, 
      /MagOS/modules, /MagOS-Data/modules/, плюс /MagOS/rootcopy/ и /MagOS-Data/rootcopy/)

    - uird.cp=*.xzm.cp,*/rootcopy - копировать в корневую ФС содержимое каталогов и модулей, если в 
      путях/именах присутствуют сочетания символов: *.xzm.cp */rootcopy (описанию соответствуют: 
      /MagOS/rootcopy, /MagOS-Data/rootcopy)

    - uird.rw=*.rwm;*.rwm.enc - подключать в режиме RW модули если в путях/именах присутствуют сочетания 
      символов: *.rwm;*.rwm.enc (таких модулей по умолчанию в MagOS нет, приведено как пример)

    - uird.ro=*.xzm;*.rom;*.rom.enc; - подключать в режиме RO модули, если в путях/именах присутствуют 
      сочетания символов: *.xzm;*.rom;*.rom.enc;

    - uird.config=MagOS.ini - найти и использовать системный конфигурационный файл MagOS.ini (не путать 
      с конфигом uird - basecfg.ini)

    - uird.ramsize=70% - установить размер tmpfs для корневого раздела в 70% от размера RAM

(не все из этих параметров обязательны для загрузки MagOS, но такой набор наиболее близок к загрузке
с MagOS initrd)

Для включения режима сохранений в каталог /MagOS-Data/changes нужно добавить:

    uird.changes=/MagOS-Data/changes
    uird.mode=changes

Для включения режима машинно-зависимых сохранений в модули в каталог /MagOS-Data/machines нужно добавить:

    uird.changes=/MagOS-Data/machines
    uird.mode=machines

Для включения режима сохранений домашних директорий в /MagOS-Data/homes нужно добавить:

    uird.home=/MagOS-Data/homes

Для того чтобы запретить подключение модулей из каталогов /MagOS/modules/ и /MagOS-Data/modules/ 
достаточно добавить:

    uird.noload=modules

В качестве параметров могут быть использованы команды shell. Например:

    uird.from="$( [ $(date +%H) -gt 22 ] && echo Do_not_work_at_night )"
с 10 вечера до 12 ночи система не загрузится, так как uird.from получит значение Do_not_work_at_night

    uird.from="/MagOS;$( [ $(date +%u) -gt 5 ] && echo /MagOS-Data)"
источник MagOS-Data подключается только по выходным дням

    "$(automount && mkdir /mnt/sda1/MagOS-Data/MYDIR && umount /mnt/sd*)" uird.changes=MYDIR
создать каталог /MagOS-Data/MYDIR на диске sda1 и подключить для хранения изменений. Приведено
исключительно как пример, так как uird.changes=/MagOS-Data/MYDIR тоже создаст папку.
**************************************************************************************************
