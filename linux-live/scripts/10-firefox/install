#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
set -u          # treat unset variable as error

. /minioslib || exit 1
# If we need to use an array of LOCALES in the code, the variables must be read
# from the file. This crutch may be removed in the future.
. /minios.conf || exit 1

get_firefox_locale() {
    case "$1" in
    "ca_ES" | "en_CA" | "en_GB" | "es_AR" | "es_CL" | "es_ES" | "es_MX" | "fy_NL" | "ga_IE" | "gu_IN" | "hi_IN" | "hy_AM" | "nb_NO" | "ne_NP" | "nn_NO" | "pa_IN" | "pt_BR" | "pt_PT" | "sv_SE" | "zh_CN" | "zh_TW")
        FIREFOX_LOCALE=$(echo $1 | tr '_' '-' | tr '[:upper:]' '[:lower:]')
        ;;
    "ca_ES")
        FIREFOX_LOCALE="ca-valencia"
        ;;
    *)
        FIREFOX_LOCALE="$(echo $1 | cut -d_ -f1)"
        ;;
    esac
}

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

if [ $DISTRIBUTION_TYPE = "debian" ]; then
    FIREFOX_BRANDING="/usr/share/firefox-esr/browser/defaults/preferences/firefox-branding.js"
elif [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
    FIREFOX_BRANDING="/etc/firefox/syspref.js"
fi

LNG="$(echo $LOCALE | cut -d_ -f1)"
if [ "$MULTILINGUAL" = "true" ]; then
    FIREFOX_LOCALES=()
    for ITEM in "${LOCALES[@]}"; do
        if [ "$ITEM" != "en_US" ]; then
            get_firefox_locale "$ITEM"
            FIREFOX_LOCALES+=("$FIREFOX_LOCALE")
        fi
    done
else
    get_firefox_locale "$LOCALE"
fi

pkg update

# install packages
if [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
    if [ $DISTRIBUTION = "jammy" ] || [ $DISTRIBUTION = "lunar" ]; then
        pkg install software-properties-common
        add-apt-repository ppa:mozillateam/ppa
        cat <<EOF >/etc/apt/preferences.d/mozilla-firefox
Package: *
Pin: release o=LP-PPA-mozillateam
Pin-Priority: 1001
EOF
    fi
    pkg install \
        firefox
    # need to ckeck
    if [ $LOCALE != "en_US" ]; then
        pkg install \
            firefox-locale-"$(echo $LOCALE | cut -d_ -f1)"
    fi
elif [ $DISTRIBUTION_TYPE = "debian" ]; then
    pkg install \
        firefox-esr
    if [ $MULTILINGUAL = "true" ]; then
        FIREFOX_LOCALES_STRING=""
        for ITEM in "${FIREFOX_LOCALES[@]}"; do
            FIREFOX_LOCALES_STRING+="firefox-esr-l10n-$ITEM "
        done
        FIREFOX_LOCALES_STRING=${FIREFOX_LOCALES_STRING%?}
        pkg install $FIREFOX_LOCALES_STRING
    else
        if [ "$LOCALE" != "en_US" ]; then
            pkg install firefox-esr-l10n-$FIREFOX_LOCALE
        fi
    fi
fi

if [[ $DESKTOP_ENVIRONMENT == *"xfce"* ]] && [ $PACKAGE_VARIANT != "puzzle" ]; then
    if [ ! -d /etc/skel/.config/xfce4 ]; then
        mkdir -p /etc/skel/.config/xfce4
    fi

    if grep -q "xterm" /etc/skel/.config/xfce4/helpers.rc >/dev/null 2>&1; then
        cat <<EOF >/etc/skel/.config/xfce4/helpers.rc
TerminalEmulator=xterm
FileManager=Thunar
WebBrowser=firefox

EOF
    elif grep -q "xfce4-terminal" /etc/skel/.config/xfce4/helpers.rc >/dev/null 2>&1; then
        cat <<EOF >/etc/skel/.config/xfce4/helpers.rc
TerminalEmulator=xfce4-terminal
FileManager=Thunar
WebBrowser=firefox

EOF
    fi
fi
if [[ $DESKTOP_ENVIRONMENT == *"lxqt"* ]] && [ -f /etc/skel/.config/lxqt/panel.conf ]; then
    sed -i '46iapps\\3\\desktop=/usr/share/applications/firefox-esr.desktop' /etc/skel/.config/lxqt/panel.conf
fi

echo "application/pdf=firefox-esr.desktop" >>/usr/share/applications/mimeapps.list

if [ $DISTRIBUTION_TYPE = "debian" ]; then
    sed -i "s,about:welcome,file:///usr/share/minios/html/index.html,g" $FIREFOX_BRANDING
elif [ $DISTRIBUTION_TYPE = "ubuntu" ]; then

    cat <<EOF >>$FIREFOX_BRANDING
pref("startup.homepage_welcome_url", "file:///usr/share/minios/html/index.html");
EOF
fi
cat <<'EOF' >>$FIREFOX_BRANDING

pref("browser.tabs.drawInTitlebar", true);
pref("general.smoothScroll", false);
pref("browser.compactmode.show", true);
pref("browser.uidensity", 1);
pref("browser.tabs.inTitlebar", 1);
pref("browser.newtabpage.activity-stream.feeds.topsites", false);
pref("browser.toolbars.bookmarks.visibility", "never");

EOF

if [ $DISTRIBUTION_TYPE = "debian" ] && [ $DESKTOP_ENVIRONMENT != "flux" ]; then
    sed -i "s,/usr/lib,env XDG_CURRENT_DESKTOP=XFCE /usr/lib,g" /usr/share/applications/firefox-esr.desktop
elif [ $DISTRIBUTION_TYPE = "debian" ] && [ $DESKTOP_ENVIRONMENT = "flux" ]; then
    rm -f /usr/share/applications/firefox-esr.desktop
fi

if [ $DISTRIBUTION_TYPE = "debian" ]; then
    PACKAGE="firefox-esr"
elif [ $DISTRIBUTION_TYPE = "ubuntu" ]; then
    PACKAGE="firefox"
fi
echo "PACKAGE=$PACKAGE" >/.package
echo "VERSION=$(dpkg -s $PACKAGE | grep Version | sed 's/Version: //g' | sed 's/:/-/g')" >>/.package
