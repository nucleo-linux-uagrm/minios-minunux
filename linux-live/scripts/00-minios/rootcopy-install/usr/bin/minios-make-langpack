#!/bin/bash

# Source the minioslib and read the buildconfig
. /usr/lib/minioslib || exit 1
read_config /etc/minios/buildconfig DISTRIBUTION_ARCH

# Function to get the Firefox locale based on the system locale
get_firefox_locale() {
    case "$1" in
    # For these locales, replace underscore with hyphen and convert to lowercase
    "ca_ES" | "en_CA" | "en_GB" | "es_AR" | "es_CL" | "es_ES" | "es_MX" | "fy_NL" | "ga_IE" | "gu_IN" | "hi_IN" | "hy_AM" | "nb_NO" | "ne_NP" | "nn_NO" | "pa_IN" | "pt_BR" | "pt_PT" | "sv_SE" | "zh_CN" | "zh_TW")
        echo $(echo $1 | tr '_' '-' | tr '[:upper:]' '[:lower:]')
        ;;
    # For Catalan (Spain), set the Firefox locale to Valencian Catalan
    "ca_ES")
        echo "ca-valencia"
        ;;
    # For all other locales, use the first part of the locale (before the underscore)
    *)
        echo "$(echo $1 | cut -d_ -f1)"
        ;;
    esac
}

# Function to get the LibreOffice locale based on the system locale
get_libreoffice_locale() {
    case "$1" in
    # For these locales, replace underscore with hyphen and convert to lowercase
    "pt_BR" | "en_GB" | "en_ZA" | "pa_IN" | "zh_CN" | "zh_TW")
        echo $(echo $1 | tr '_' '-' | tr '[:upper:]' '[:lower:]')
        ;;
    # For all other locales, use the first part of the locale (before the underscore)
    *)
        echo "$(echo $1 | cut -d_ -f1)"
        ;;
    esac
}

get_libreoffice_lc_messages() {
    case "$1" in
    "pt_BR" | "en_GB" | "en_ZA" | "pa_IN" | "zh_CN" | "zh_TW")
        echo $1
        ;;
    *)
        echo "$(echo $1 | cut -d_ -f1)"
        ;;
    esac
}

# Function to copy files
copy_files() {
    local SOURCE_FILE="$1"
    local DEST_DIR="$2"

    # Create the destination directory if it doesn't exist
    mkdir -p "$DEST_DIR"
    # Copy the source file to the destination directory
    cp -r "$SOURCE_FILE" "$DEST_DIR" || true
}

# Function to copy locale files
copy_locale_files() {
    # Array of locale patterns
    local LOCALE_PATTERNS=("$@")
    # Loop over each pattern
    for PATTERN in "${LOCALE_PATTERNS[@]}"; do
        # Find files matching the pattern and locale, then copy them to the destination directory
        find $PATTERN 2>/dev/null | while read -r FILE; do
            DEST_DIR="${DESTINATION_DIR}/${LOCALE}/$(dirname "${FILE}")"
            copy_files "$FILE" "$DEST_DIR"
        done
    done
}

# Function to clean up temporary directory
cleanup() {
    rm -rf "$DESTINATION_DIR"
}

# Get the list of all locales, exclude C, C.utf8 and POSIX, and remove .utf8 ending
LOCALES=($(locale -a | grep -v -E '^C$|^C.utf8$|^POSIX$' | sed 's/\.utf8//'))
DESTINATION_DIR=$(mktemp -d)

# Set trap to clean up temporary directory on exit
trap cleanup EXIT

#dpkg --remove --force-depends locales
#rm -f /etc/locale.gen
#pkg update
#pkg install locales

# Loop over each locale
for LOCALE in "${LOCALES[@]}"; do
    if [ "$LOCALE" != "en_US" ]; then
        SHORT_LOCALE="${LOCALE%%_*}"

        # Use the functions to set the Firefox and LibreOffice locales based on the system locale
        FIREFOX_LOCALE=$(get_firefox_locale $LOCALE)
        LIBREOFFICE_LOCALE=$(get_libreoffice_locale $LOCALE)

        while IFS=, read -r locale layoutcode layout; do
            if [ "$locale" == "$LOCALE" ]; then
                LAYOUTCODE="$layoutcode"
                LAYOUT="$layout"
                break
            fi
        done </usr/share/minios/layoutcodes.csv

        if [ -z "$LAYOUT" ]; then
            echo "Locale not recognized, defaulting to English (US) layout"
            LAYOUT="English (US)"
            LAYOUTCODE="us"
        fi

        DEBCONF_SETTINGS=(
            "keyboard-configuration  keyboard-configuration/layoutcode       string  us,$LAYOUTCODE"
            "keyboard-configuration  keyboard-configuration/variant  select  $LAYOUT"
            "keyboard-configuration  keyboard-configuration/toggle   select  Alt+Shift"
            "locales locales/locales_to_be_generated multiselect     $LOCALE.UTF-8 UTF-8"
            "locales locales/default_environment_locale      select  $LOCALE.UTF-8"
        )

        if [ "$DISTRIBUTION" != "buster" ]; then
            DEBCONF_SETTINGS+=(
                "keyboard-configuration  keyboard-configuration/layout   select  $LAYOUT"
            )
        fi

        for SETTING in "${DEBCONF_SETTINGS[@]}"; do
            echo "$SETTING" | debconf-set-selections -v
        done

        dpkg --remove --force-depends locales
        rm -f /etc/locale.gen
        pkg update
        pkg install locales
        update-locale LANG=$LOCALE.UTF-8

        #DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales
        DEBIAN_FRONTEND=noninteractive dpkg-reconfigure keyboard-configuration

        #if [ ! -d /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml ]; then
        #    mkdir -p /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml
        #fi
        cat <<EOF >/etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/keyboard-layout.xml
<?xml version="1.0" encoding="UTF-8"?>

<channel name="keyboard-layout" version="1.0">
  <property name="Default" type="empty">
    <property name="XkbDisable" type="bool" value="false"/>
    <property name="XkbLayout" type="string" value="us,$LAYOUTCODE"/>
    <property name="XkbVariant" type="string" value=","/>
    <property name="XkbOptions" type="empty">
      <property name="Group" type="string" value="grp:alt_shift_toggle"/>
    </property>
  </property>
</channel>

EOF

        # Patterns for system locales
        SYSTEM_LOCALE_PATTERNS=("/usr/share/locale/$LOCALE/*" "/usr/share/locale/$SHORT_LOCALE/*" "/usr/share/i18n/locales/$LOCALE" /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/keyboard-layout.xml)
        # Call the function with system locale patterns
        copy_locale_files "${SYSTEM_LOCALE_PATTERNS[@]}"

        # Patterns for Firefox locales
        FIREFOX_LOCALE_PATTERNS=("/usr/lib/firefox-esr/browser/extensions/langpack-${FIREFOX_LOCALE}@firefox-esr.mozilla.org.xpi")
        # Call the function with Firefox locale patterns
        copy_locale_files "${FIREFOX_LOCALE_PATTERNS[@]}"

        # Patterns for LibreOffice locales
        LIBREOFFICE_LOCALE_PATTERNS=("/usr/lib/libreoffice/program/resource/$(get_libreoffice_lc_messages $LOCALE)/*" "/usr/lib/libreoffice/share/autotext/$(get_libreoffice_lc_messages $LOCALE)/*" "/usr/lib/libreoffice/share/template/$(get_libreoffice_lc_messages $LOCALE)/*" "/usr/lib/libreoffice/share/wordbook/$(get_libreoffice_lc_messages $LOCALE)/*" "/etc/libreoffice/registry/Langpack-${LIBREOFFICE_LOCALE}.xcd" "/etc/libreoffice/registry/res/fcfg_langpack_${LIBREOFFICE_LOCALE}.xcd" "/etc/libreoffice/registry/res/registry_${LIBREOFFICE_LOCALE}.xcd")
        # Call the function with LibreOffice locale patterns
        copy_locale_files "${LIBREOFFICE_LOCALE_PATTERNS[@]}"

        for FILE in /usr/lib/locale/locale-archive /etc/locale.gen /etc/default/locale; do
            # Adjust for the directory structure
            DEST_DIR="${DESTINATION_DIR}/${LOCALE}/$(dirname "${FILE}")"
            copy_files "$FILE" "$DEST_DIR"
        done

    fi
done

# Loop over each locale again to create a squashfs file for each one
for LOCALE in "${LOCALES[@]}"; do
    if [ "$LOCALE" != "en_US" ]; then
        mksquashfs "${DESTINATION_DIR}/${LOCALE}" "99-langpack-$(echo $LOCALE | tr '[:upper:]' '[:lower:]' | tr '_' '-')-xz.sb" -comp xz -b 1024K -always-use-fragments -noappend
    fi
done
