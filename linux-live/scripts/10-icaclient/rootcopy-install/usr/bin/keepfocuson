#!/bin/bash

check_gui_tool() {
    if command -v yad >/dev/null; then
        GUI_TOOL="yad"
    elif command -v zenity >/dev/null; then
        GUI_TOOL="zenity"
    elif command -v dialog >/dev/null; then
        GUI_TOOL="dialog"
    elif command -v whiptail >/dev/null; then
        GUI_TOOL="whiptail"
    else
        echo "Error: Neither yad, zenity, dialog, nor whiptail is installed. Please install one of them and try again."
        exit 1
    fi
}

get_form_options() {
    WINDOW_LIST=$(wmctrl -l | awk '{$1=$2=$3=""; print $0}' | sed 's/^ //')

    CONFIG_FILE="$HOME/.keepfocuson"

    if [[ -f $CONFIG_FILE ]]; then
        DEFAULT_WINDOW_TITLE=$(awk -F '|' '{print $1}' $CONFIG_FILE)
        DEFAULT_WAIT_TIME=$(awk -F '|' '{print $2}' $CONFIG_FILE)
        DEFAULT_RANDOMIZATION_RANGE=$(awk -F '|' '{print $3}' $CONFIG_FILE)
        DEFAULT_RUN_TIME=$(awk -F '|' '{print $4}' $CONFIG_FILE)
    else
        DEFAULT_WINDOW_TITLE=""
        DEFAULT_WAIT_TIME="90"
        DEFAULT_RANDOMIZATION_RANGE="30"
        DEFAULT_RUN_TIME="01:00:00"
    fi

    echo "    $DEFAULT_WINDOW_TITLE
    $DEFAULT_WAIT_TIME
    $DEFAULT_RANDOMIZATION_RANGE
    $DEFAULT_RUN_TIME"
    sleep 0

    if [[ $GUI_TOOL == "yad" ]]; then
        FORM_OPTIONS=$(yad --form --field="Window:CB" --field="Wait time (seconds):NUM" --field="Randomization range (seconds):NUM" --field="Run time (HH:MM:SS):S" --title="Select options" "$(echo ${WINDOW_LIST//$'\n'/!})" "$DEFAULT_WAIT_TIME" "$DEFAULT_RANDOMIZATION_RANGE" "$DEFAULT_RUN_TIME")

        check_exit_status

        SELECTED_WINDOW_TITLE=$(echo $FORM_OPTIONS | awk -F '|' '{print $1}')

    elif [[ $GUI_TOOL == "zenity" ]]; then
        FORM_OPTIONS=$(zenity --forms --add-combo="Window" --combo-values="$(echo ${WINDOW_LIST//$'\n'/|})" --add-entry="Wait time (seconds)" --add-entry="Randomization range (seconds)" --add-entry="Run time (HH:MM:SS)" --title "Select options")

        check_exit_status

        SELECTED_WINDOW_TITLE=$(echo $FORM_OPTIONS | awk -F '|' '{print $1}')

    elif [[ $GUI_TOOL == "dialog" ]]; then
        WINDOW_TITLES=()
        while read -r LINE; do
            WINDOW_TITLES+=("$LINE" "")
        done <<<"$WINDOW_LIST"

        SELECTED_WINDOW_TITLE=$(dialog --title "Select options" --menu "Select a window from the list:" 25 78 16 "${WINDOW_TITLES[@]}" 3>&1 1>&2 2>&3)

        check_exit_status

        FORM_OPTIONS="$SELECTED_WINDOW_TITLE"

        FORM_OPTIONS+="|$(dialog --form "Select options" 0 0 0 \
            "Wait time (seconds):" 1 1 "$DEFAULT_WAIT_TIME" 1 25 50 0 \
            "Randomization range (seconds):" 2 1 "$DEFAULT_RANDOMIZATION_RANGE" 2 25 50 0 \
            "Run time (HH:MM:SS):" 3 1 "$DEFAULT_RUN_TIME" 3 25 50 0 \
            3>&1 1>&2 2>&3 | tr '\n' '|')"

        echo $FORM_OPTIONS

        check_exit_status

    else
        WINDOW_TITLES=()
        while read -r LINE; do
            WINDOW_TITLES+=("$LINE" "")
        done <<<"$WINDOW_LIST"

        SELECTED_WINDOW_TITLE=$(whiptail --title "Select options" --menu "Select a window from the list:" 25 78 16 "${WINDOW_TITLES[@]}" 3>&1 1>&2 2>&3)

        check_exit_status

        FORM_OPTIONS="$SELECTED_WINDOW_TITLE"

        FORM_OPTIONS+="|$(whiptail --inputbox "Enter the wait time in seconds:" 8 78 "$DEFAULT_WAIT_TIME" --title "Wait time" 3>&1 1>&2 2>&3)"

        check_exit_status

        FORM_OPTIONS+="|$(whiptail --inputbox "Enter the randomization range in seconds:" 8 78 "$DEFAULT_RANDOMIZATION_RANGE" --title "Randomization range" 3>&1 1>&2 2>&3)"

        check_exit_status

        FORM_OPTIONS+="|$(whiptail --inputbox "Enter the run time in HH:MM:SS format:" 8 78 "$DEFAULT_RUN_TIME" --title "Run time" 3>&1 1>&2 2>&3)"

        check_exit_status

    fi

    echo $FORM_OPTIONS >$CONFIG_FILE

}

show_progress() {

    if [[ $GUI_TOOL == "yad" ]]; then

        (
            while true; do
                calculate_remaining_run_time
                echo "$(((CURRENT_TIME - START_TIME) * 100 / RUN_TIME))"
                echo "# Time remaining: $(date -u -d @$REMAINING_RUN_TIME +'%H:%M:%S')"
                sleep 1
            done
        ) | yad --progress --auto-close --button="Stop:0" --title="Progress" &

    elif [[ $GUI_TOOL == "zenity" ]]; then

        (
            while true; do
                calculate_remaining_run_time
                echo "$(((CURRENT_TIME - START_TIME) * 100 / RUN_TIME))"
                echo "# Time remaining: $(date -u -d @$REMAINING_RUN_TIME +'%H:%M:%S')"
                sleep 1
            done
        ) | zenity --progress --auto-close --text="Progress" &

    elif [[ $GUI_TOOL == "dialog" ]]; then

        (
            while true; do
                calculate_remaining_run_time
                echo "$(((CURRENT_TIME - START_TIME) * 100 / RUN_TIME))"
                echo "# Time remaining: $(date -u -d @$REMAINING_RUN_TIME +'%H:%M:%S')"
                sleep 1
            done
        ) | dialog --gauge "Time remaining:" 10 60 0 &

    else

        (
            while true; do
                calculate_remaining_run_time
                echo "$(((CURRENT_TIME - START_TIME) * 100 / RUN_TIME))"
                sleep 1
            done
        ) | whiptail --gauge "Time remaining:" 6 60 0 &

    fi

    GUI_PID=$!
}

toggle_window() {
    if xprop -id $WINDOW_ID | grep -q "window state: Iconic"; then
        wmctrl -ia $WINDOW_ID
        xdotool key "Scroll_Lock"
        wmctrl -ir $WINDOW_ID -b add,hidden
        xdotool windowfocus --sync $ACTIVE_WINDOW_ID
    else
        xdotool windowfocus --sync $WINDOW_ID
        xdotool key "Scroll_Lock"
        xdotool windowfocus --sync $ACTIVE_WINDOW_ID
    fi
}

calculate_remaining_run_time() {
    CURRENT_TIME=$(date +%s)
    REMAINING_RUN_TIME=$((RUN_TIME - (CURRENT_TIME - START_TIME)))
}

check_exit_status() {
    if [[ $? -ne 0 ]]; then
        exit
    fi
}

check_progress_window() {
    while true; do
        if ! kill -0 $GUI_PID 2>/dev/null; then
            kill -s SIGTERM $$
            if [ "$GUI_TOOL" != "whiptail" ] && [ "$GUI_TOOL" != "dialog" ]; then
                echo "The progress window has closed and execution has stopped."
            fi
            exit
        fi

        calculate_remaining_run_time

        if ((REMAINING_RUN_TIME <= 0)); then
            kill $GUI_PID
            kill -s SIGTERM $$
            if [ "$GUI_TOOL" != "whiptail" ] && [ "$GUI_TOOL" != "dialog" ]; then
                echo "The execution time has expired, execution is stopped."
            fi
            exit
        fi
        if [ "$GUI_TOOL" != "whiptail" ] && [ "$GUI_TOOL" != "dialog" ]; then
            echo "The progress window is active. Remaining time: $REMAINING_RUN_TIME"
        fi
        sleep 5
    done
}

check_gui_tool
get_form_options

MARKER=$(mktemp)
WAIT_TIME=$(echo $FORM_OPTIONS | awk -F '|' '{print $2}')
RANDOMIZATION_RANGE=$(echo $FORM_OPTIONS | awk -F '|' '{print $3}')
RUN_TIME_STR=$(echo $FORM_OPTIONS | awk -F '|' '{print $4}')
RUN_TIME=$(date -u -d "1970-01-01 $RUN_TIME_STR" +"%s")
WINDOW_ID=$(wmctrl -l | grep "$SELECTED_WINDOW_TITLE" | awk '{print $1}')
START_TIME=$(date +%s)

show_progress
check_progress_window &

while true; do
    ACTIVE_WINDOW_ID=$(xdotool getactivewindow)

    toggle_window

    RANDOM_WAIT_TIME=$((WAIT_TIME - RANDOMIZATION_RANGE / 2 + RANDOM % RANDOMIZATION_RANGE))
    sleep $RANDOM_WAIT_TIME
done
