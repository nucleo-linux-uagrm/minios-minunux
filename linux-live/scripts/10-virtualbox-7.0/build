#!/bin/bash

set -e          # exit on error
set -o pipefail # exit on pipeline error
#set -u          # treat unset variable as error

. /minioslib || exit 1

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

KERNEL="$KERNEL"
if [ -f /usr/bin/dpkg-query ] 2>/dev/null; then
    KERNEL=$(dpkg-query -W -f='${binary:Package}\n' linux-image-* | head -n 1 | sed 's/linux-image-//')
else
    KERNEL=$(uname -r)
fi

# install packages
install_build_packages() {
    local HEADERS_PACKAGE=$1
    pkg update
    pkg install $HEADERS_PACKAGE gcc make build-essential libelf-dev debhelper dpkg-dev dkms bc git
}
case $DISTRIBUTION_TYPE in
"debian")
    case $DISTRIBUTION in
    "orel")
        install_build_packages "linux-headers-$KERNEL"
        ;;
    "stretch" | "buster")
        if [ $KERNEL_AUFS = "true" ] && [ $KERNEL_BPO != "true" ]; then
            install_build_packages "linux-headers-$KERNEL_ARCH"
            pkg install aufs-dkms
        elif [ $KERNEL_AUFS = "true" ] && [ $KERNEL_BPO = "true" ]; then
            if [ $KERNEL_TYPE = "default" ]; then
                install_build_packages "linux-headers-$KERNEL_VERSION-mos-$KERNEL_ARCH"
            else
                install_build_packages "linux-headers-$KERNEL_VERSION-mos-$KERNEL_TYPE-$KERNEL_ARCH"
            fi
        else
            if [ $KERNEL_TYPE = "default" ]; then
                install_build_packages "$BPO linux-headers-$KERNEL_ARCH"
            else
                install_build_packages "$BPO linux-headers-$KERNEL_TYPE-$KERNEL_ARCH"
            fi
        fi
        ;;
    *)
        if [ $KERNEL_AUFS = "true" ]; then
            if [ $KERNEL_TYPE = "default" ]; then
                install_build_packages "linux-headers-$KERNEL_VERSION-mos-$KERNEL_ARCH"
            else
                install_build_packages "linux-headers-$KERNEL_VERSION-mos-$KERNEL_TYPE-$KERNEL_ARCH"
            fi
        else
            if [ $KERNEL_TYPE = "default" ]; then
                install_build_packages "$BPO linux-headers-$KERNEL_ARCH"
            else
                install_build_packages "$BPO linux-headers-$KERNEL_TYPE-$KERNEL_ARCH"
            fi
        fi
        ;;
    esac
    ;;
"ubuntu")
    if [ $KERNEL_AUFS = "true" ]; then
        if [ $KERNEL_TYPE = "default" ]; then
            install_build_packages "linux-headers-$KERNEL_VERSION-mos-$KERNEL_ARCH"
        else
            install_build_packages "linux-headers-$KERNEL_VERSION-mos-$KERNEL_TYPE-$KERNEL_ARCH"
        fi
    else
        install_build_packages "linux-headers-$KERNEL"
    fi
    ;;
esac
echo "KERNEL=$KERNEL" >/miniosbuild.conf

set -x
KERN_VER=$KERNEL
export KERN_VER
cp /usr/lib/virtualbox/vboxdrv.sh /usr/lib/virtualbox/vboxdrv.sh.orig
cp /usr/share/virtualbox/src/vboxhost/vboxdrv/Makefile-footer.gmk /usr/share/virtualbox/src/vboxhost/vboxdrv/Makefile-footer.gmk.orig
ls /usr/share/virtualbox/src/vboxhost/vboxdrv/Makefile-footer.gmk.orig
cp /usr/share/virtualbox/src/vboxhost/vboxnetadp/Makefile-footer.gmk /usr/share/virtualbox/src/vboxhost/vboxnetadp/Makefile-footer.gmk.orig
ls /usr/share/virtualbox/src/vboxhost/vboxnetadp/Makefile-footer.gmk.orig
cp /usr/share/virtualbox/src/vboxhost/vboxnetflt/Makefile-footer.gmk /usr/share/virtualbox/src/vboxhost/vboxnetflt/Makefile-footer.gmk.orig
ls /usr/share/virtualbox/src/vboxhost/vboxnetflt/Makefile-footer.gmk.orig
sed -i "89s/KERN_VER/#KERN_VER/g" usr/lib/virtualbox/vboxdrv.sh
sed -i "584s/depmod -a/depmod -a $KERNEL/g" usr/lib/virtualbox/vboxdrv.sh
sed -i "s/depmod -a/depmod -a $KERNEL/g" usr/share/virtualbox/src/vboxhost/vboxdrv/Makefile-footer.gmk
sed -i "s/depmod -a/depmod -a $KERNEL/g" usr/share/virtualbox/src/vboxhost/vboxnetadp/Makefile-footer.gmk
sed -i "s/depmod -a/depmod -a $KERNEL/g" usr/share/virtualbox/src/vboxhost/vboxnetflt/Makefile-footer.gmk

/usr/sbin/vboxconfig
#depmod -a $KERNEL
#mv /usr/lib/virtualbox/vboxdrv.sh.orig /usr/lib/virtualbox/vboxdrv.sh
#mv /usr/share/virtualbox/src/vboxhost/vboxdrv/Makefile-footer.gmk.orig /usr/share/virtualbox/src/vboxhost/vboxdrv/Makefile-footer.gmk
#mv /usr/share/virtualbox/src/vboxhost/vboxnetadp/Makefile-footer.gmk.orig /usr/share/virtualbox/src/vboxhost/vboxnetadp/Makefile-footer.gmk
#mv /usr/share/virtualbox/src/vboxhost/vboxnetflt/Makefile-footer.gmk.orig /usr/share/virtualbox/src/vboxhost/vboxnetflt/Makefile-footer.gmk
set +x
: 'if [ ! -d /squashfs-root/usr/lib/modules/$KERNEL/misc ]; then
    mkdir -p /squashfs-root/usr/lib/modules/$KERNEL/misc
fi
cp /usr/lib/modules/$KERNEL/misc/vboxdrv.ko /squashfs-root/usr/lib/modules/$KERNEL/misc/ 
cp /usr/lib/modules/$KERNEL/misc/vboxnetadp.ko /squashfs-root/usr/lib/modules/$KERNEL/misc/ 
cp /usr/lib/modules/$KERNEL/misc/vboxnetflt.ko /squashfs-root/usr/lib/modules/$KERNEL/misc/ 

dir2sb /squashfs-root /$MODULE.sb '
